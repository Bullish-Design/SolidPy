# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/14_dimension.ipynb.

# %% auto 0
__all__ = ['Dimension']

# %% ../nbs/14_dimension.ipynb 1
from .constants.constants import *

class Dimension:
    def __init__(self, swModel, dimName, sketchName, units):
        self.model = swModel
        self.name = dimName
        self.sketchName = sketchName
        # self.dimType = dimType
        # self.value = value
        self.units = units

    def get(self):
        # gets the value of the dimension
        fullDimName = self.name + "@" + self.sketchName + "@" + self.model.GetTitle
        swDim = self.model.Parameter(fullDimName)
        # swFeat = self.model.FeatureByName(self.sketchName)
        vVal = swDim.GetSystemValue3(swConst.swThisConfiguration, Empty)
        dimVal = convertUnits(vVal[0], self.units)
        # swDispDim = swFeat.GetFirstDisplayDimension
        # while swDispDim:
        #     swDim = swDispDim.GetDimension2(Empty)
        #     if swDim.Name == self.name:
        #         vDimVals = swDim.GetValue3(swConst.swThisConfiguration, Empty)
        #         return vDimVals[0]
        #     swDispDim = swDispDim.GetNext
        return dimVal

    def set(self, value):
        # sets the value of the dimension
        fullDimName = self.name + "@" + self.sketchName + "@" + self.model.GetTitle
        swDim = self.model.Parameter(fullDimName)
        vVal = swDim.GetSystemValue3(swConst.swThisConfiguration, Empty)
        dimension = convertUnits(value, self.units)
        swDim.SetSystemValue3(dimension, swConst.swThisConfiguration, Empty)
        # vVal = swDim.GetSystemValue3(swConst.swThisConfiguration, Empty)
        # print("  Name: " + swDim.Name + "  |  Value: " + str(vVal[0]))
        return  # vVal[0]

    pass




